services:
  mysql:
    image: mysql:8.4
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-password}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - mysql_data:/var/lib/mysql
      - ./db/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  nats:
    image: nats:2.11-alpine
    restart: always
    ports:
      - "4222:4222"
      - "8222:8222"  # HTTP monitoring port
    command: >
      --js
      --store_dir /data
      --http_port 8222
    volumes:
      - nats_data:/data
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8222/"]
      timeout: 5s
      retries: 5

  mailpit:
    image: axllent/mailpit:latest
    restart: always
    ports:
      - "1025:1025"  # SMTP port
      - "8025:8025"  # Web UI port
    environment:
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1

  jaeger:
    image: cr.jaegertracing.io/jaegertracing/jaeger:2.8.0
    restart: always
    ports:
      - "16686:16686"  # Jaeger UI
      - "4317:4317"    # OTLP gRPC receiver
      - "4318:4318"    # OTLP HTTP receiver
      - "5778:5778"    # Config server (legacy)
      - "9411:9411"    # Zipkin receiver

  web-server:
    build:
      context: .
      dockerfile: docker/local/web-server.local.Dockerfile
    restart: unless-stopped
    environment:
      MYSQL_HOST: mysql
      MYSQL_PORT: ${MYSQL_PORT}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      JAEGER_HOST: jaeger
      JAEGER_PORT: ${JAEGER_PORT}
    ports:
      - "8080:8080"
    volumes:
      - .:/app
      - /app/tmp
    depends_on:
      mysql:
        condition: service_healthy
      jaeger:
        condition: service_started

  outbox-publisher:
    build:
      context: .
      dockerfile: docker/local/outbox-publisher.local.Dockerfile
    restart: unless-stopped
    environment:
      MYSQL_HOST: mysql
      MYSQL_PORT: ${MYSQL_PORT}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      NATS_HOST: nats
      NATS_PORT: ${NATS_PORT}
      JAEGER_HOST: jaeger
      JAEGER_PORT: ${JAEGER_PORT}
    volumes:
      - .:/app
      - /app/tmp
    depends_on:
      mysql:
        condition: service_healthy
      nats:
        condition: service_healthy
      jaeger:
        condition: service_started    

  prime-check-worker:
    build:
      context: .
      dockerfile: docker/local/prime-check-worker.local.Dockerfile
    restart: unless-stopped
    environment:
      MYSQL_HOST: mysql
      MYSQL_PORT: ${MYSQL_PORT}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      NATS_HOST: nats
      NATS_PORT: ${NATS_PORT}
      JAEGER_HOST: jaeger
      JAEGER_PORT: ${JAEGER_PORT}
    volumes:
      - .:/app
      - /app/tmp
    depends_on:
      mysql:
        condition: service_healthy
      nats:
        condition: service_healthy
      jaeger:
        condition: service_started

  email-send-worker:
    build:
      context: .
      dockerfile: docker/local/email-send-worker.local.Dockerfile
    restart: unless-stopped
    environment:
      NATS_HOST: nats
      NATS_PORT: ${NATS_PORT}
      SMTP_HOST: mailpit
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USERNAME: ${SMTP_USERNAME}
      JAEGER_HOST: jaeger
      JAEGER_PORT: ${JAEGER_PORT}
    volumes:
      - .:/app
      - /app/tmp
    depends_on:
      nats:
        condition: service_healthy
      mailpit:
        condition: service_healthy
      jaeger:
        condition: service_started

volumes:
  mysql_data:
  nats_data: